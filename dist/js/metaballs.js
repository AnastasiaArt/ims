let canvas=document.getElementById("metaballsId"),gl=canvas.getContext("webgl"),NUM_METABALLS=7,WIDTH=canvas.width,HEIGHT=canvas.height;function compileShader(t,a){let e=gl.createShader(a);if(gl.shaderSource(e,t),gl.compileShader(e),!gl.getShaderParameter(e,gl.COMPILE_STATUS))throw"Shader compile failed with: "+gl.getShaderInfoLog(e);return e}let vertexShader=compileShader("\nattribute vec2 position;\n\nvoid main() {\n    // position specifies only x and y.\n    // We set z to be 0.0, and w to be 1.0\n    gl_Position = vec4(position, 0.0, 1.0);\n}",gl.VERTEX_SHADER),backgroundVec4=[.9568627450980393,.9607843137254902,.2,0].join(", "),color=[.37254901960784315,.396078431372549,.8549019607843137,1].join(", "),fragmentShader=compileShader("\nprecision highp float;\nuniform vec3 metaballs["+NUM_METABALLS+"];\nconst float WIDTH = "+WIDTH+".0;\nconst float HEIGHT = "+HEIGHT+".0;\n\nvoid main(){\n    float x = gl_FragCoord.x;\n    float y = gl_FragCoord.y;\n    float v = 0.0;\n    for (int i = 0; i < "+NUM_METABALLS+"; i++) {\n        vec3 mb = metaballs[i];\n        float dx = mb.x - x;\n        float dy = mb.y - y;\n        float r = mb.z;\n        v += r*r/(dx*dx + dy*dy);\n    }\n    if (v > 1.0) {\n        gl_FragColor = vec4(0.592156862745098, 0.592156862745098, 0.9098039215686274, 1);\n    } else {\n        gl_FragColor = vec4("+backgroundVec4+");\n    }\n}\n",gl.FRAGMENT_SHADER),program=gl.createProgram();gl.attachShader(program,vertexShader),gl.attachShader(program,fragmentShader),gl.linkProgram(program),gl.useProgram(program);let vertexData=new Float32Array([-1,1,-1,-1,1,1,1,-1]),vertexDataBuffer=gl.createBuffer();function getAttribLocation(t,a){let e=gl.getAttribLocation(t,a);if(-1===e)throw"Can not find attribute "+a+".";return e}gl.bindBuffer(gl.ARRAY_BUFFER,vertexDataBuffer),gl.bufferData(gl.ARRAY_BUFFER,vertexData,gl.STATIC_DRAW);let positionHandle=getAttribLocation(program,"position");gl.enableVertexAttribArray(positionHandle),gl.vertexAttribPointer(positionHandle,2,gl.FLOAT,gl.FALSE,8,0);let metaballs=[];for(let t=0;t<NUM_METABALLS;t++){let t=40*Math.random()+10;metaballs.push({x:Math.random()*(WIDTH-2*t)+t,y:Math.random()*(HEIGHT-2*t)+t,vx:10*Math.random()-5,vy:10*Math.random()-5,r:t})}function getUniformLocation(t,a){let e=gl.getUniformLocation(t,a);if(-1===e)throw"Can not find uniform "+a+".";return e}let metaballsHandle=getUniformLocation(program,"metaballs"),step=function(){for(let t=0;t<NUM_METABALLS;t++){let a=metaballs[t];a.x+=a.vx/10,a.x-a.r<20?(a.x=a.r+21,a.vx=Math.abs(a.vx)):a.x+a.r>WIDTH-20&&(a.x=WIDTH-a.r-20,a.vx=-Math.abs(a.vx)),a.y+=a.vy/10,a.y-a.r<20?(a.y=a.r+21,a.vy=Math.abs(a.vy)):a.y+a.r>HEIGHT-20&&(a.y=HEIGHT-a.r-20,a.vy=-Math.abs(a.vy))}let t=new Float32Array(3*NUM_METABALLS);for(let a=0;a<NUM_METABALLS;a++){let e=3*a,r=metaballs[a];t[e+0]=r.x,t[e+1]=r.y,t[e+2]=r.r}gl.uniform3fv(metaballsHandle,t),gl.drawArrays(gl.TRIANGLE_STRIP,0,4),requestAnimationFrame(step)};module.exports=step;